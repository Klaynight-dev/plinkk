name: Notify GitHub Updates to Discord

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - closed
      - synchronize
      - reopened
  issues:
    types:
      - opened
      - edited
      - closed
  release:
    types:
      - created
      - published

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Send notification to Discord
        run: |
          # Define the message to send based on the event
          if [[ "${{ github.event_name }}" == "push" ]]; then
            MESSAGE="ðŸ“¦ Commit pushed: ${{ github.actor }} - ${{ github.sha }}\nMessage: ${{ github.event.head_commit.message }}\nLink: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ github.event.action }}" == "opened" ]]; then
              MESSAGE="ðŸš€ New PR opened by ${{ github.actor }}: ${{ github.event.pull_request.title }}\nLink: ${{ github.event.pull_request.html_url }}"
            elif [[ "${{ github.event.action }}" == "closed" || "${{ github.event.action }}" == "merged" ]]; then
              MESSAGE="ðŸ”’ PR closed/merged by ${{ github.actor }}: ${{ github.event.pull_request.title }}\nLink: ${{ github.event.pull_request.html_url }}"
            fi
          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            MESSAGE="ðŸ“„ Issue ${{ github.event.action }}: ${{ github.event.issue.title }}\nLink: ${{ github.event.issue.html_url }}"
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            MESSAGE="ðŸŽ‰ Release ${{ github.event.action }}: ${{ github.event.release.name }}\nLink: ${{ github.event.release.html_url }}"
          fi

          # Send the message to Discord via the Webhook
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"$MESSAGE\"}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"
