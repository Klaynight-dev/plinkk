name: 🚀 Deploy Plinkk

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Permet de déclencher manuellement le workflow

# Configuration des permissions pour GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Empêche les déploiements concurrents
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Job de build et test
  build:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build TypeScript
      run: npm run build
      
    - name: ✅ Verify build output
      run: |
        echo "Vérification des fichiers générés..."
        ls -la dist/
        echo "Contenu du répertoire dist:"
        find dist -type f -name "*.js" | head -10
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        retention-days: 1

  # Job de déploiement sur GitHub Pages
  deploy:
    name: 🌐 Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔧 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build TypeScript
      run: npm run build
      
    - name: 📁 Prepare deployment folder
      run: |
        # Créer le dossier de déploiement
        mkdir -p deploy
        
        # Copier les fichiers statiques
        cp index.html deploy/
        cp -r contents deploy/
        
        # Remplacer les fichiers TypeScript par les fichiers JavaScript compilés
        # Copier les fichiers JS compilés vers leur destination finale
        cp -r dist/* deploy/contents/js/
        
        # Vérifier la structure
        echo "Structure du dossier deploy:"
        find deploy -type f | head -20
        
    - name: 🔧 Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: deploy
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job de notification (optionnel)
  notify:
    name: 📢 Notify
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📊 Build Status
      run: |
        if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Déploiement réussi ! 🎉"
          echo "🌐 Votre site est maintenant disponible sur GitHub Pages"
        elif [ "${{ needs.build.result }}" == "failure" ]; then
          echo "❌ Échec de la compilation TypeScript"
          exit 1
        elif [ "${{ needs.deploy.result }}" == "failure" ]; then
          echo "❌ Échec du déploiement"
          exit 1
        else
          echo "⚠️ Statut de déploiement incertain"
        fi
