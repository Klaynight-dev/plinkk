name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create missing JS files
        run: |
          mkdir -p contents/js
          
          # themeConfig.js
          cat > contents/js/themeConfig.js << 'EOF'
          export const themeConfig = {
              default: {
                  primary: '#7289DA',
                  secondary: '#ffffff',
                  background: '#2c2f33',
                  text: '#ffffff'
              }
          };
          EOF
          
          # animationConfig.js
          cat > contents/js/animationConfig.js << 'EOF'
          export const animationConfig = {
              fadeIn: { duration: 800, easing: 'easeInOutQuad' }
          };
          EOF
          
          # canvaConfig.js
          cat > contents/js/canvaConfig.js << 'EOF'
          export const canvasConfig = {
              particles: { count: 100, size: 2, speed: 0.5, color: '#7289DA' }
          };
          EOF
          
          # easterEggs.js
          cat > contents/js/easterEggs.js << 'EOF'
          export const easterEggs = {};
          export function initEasterEggs() {}
          EOF
          
          # btnIconThemeConfig.js
          cat > contents/js/btnIconThemeConfig.js << 'EOF'
          export const btnIconThemeConfig = {
              github: 'logo-github',
              twitter: 'logo-twitter',
              discord: 'logo-discord'
          };
          EOF
          
          # cookies.js
          cat > contents/js/cookies.js << 'EOF'
          export const cookies = {
              set: (name, value, days = 30) => {
                  const expires = new Date(Date.now() + days * 864e5).toUTCString();
                  document.cookie = `${name}=${value}; expires=${expires}; path=/`;
              },
              get: (name) => {
                  return document.cookie.split('; ').find(row => row.startsWith(name + '='))?.split('=')[1] || '';
              }
          };
          EOF
          
          # security.js
          cat > contents/js/security.js << 'EOF'
          export const security = {
              sanitizeInput: (input) => {
                  const div = document.createElement('div');
                  div.textContent = input;
                  return div.innerHTML;
              }
          };
          EOF
          
      - name: Debug - List files
        run: |
          echo "📋 Structure complète du projet:"
          find . -type f | sort
          
          echo "🔧 Fichiers JavaScript trouvés:"
          find . -name "*.js" | sort
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    name: 📢 Notify
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📊 Build Status
      run: |
        if [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Déploiement réussi ! 🎉"
          echo "🌐 Votre site est maintenant disponible sur GitHub Pages"
        elif [ "${{ needs.build.result }}" == "failure" ]; then
          echo "❌ Échec de la compilation TypeScript"
          exit 1
        elif [ "${{ needs.deploy.result }}" == "failure" ]; then
          echo "❌ Échec du déploiement"
          exit 1
        else
          echo "⚠️ Statut de déploiement incertain"
        fi
