name: 🚀 Deploy Jekyll + TypeScript to GitHub Pages

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - ".gitignore"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: "18"
  RUBY_VERSION: "3.1"

jobs:
  build:
    name: 🔨 Build Site
    runs-on: ubuntu-latest
    
    steps:
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚡ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Node Dependencies
        run: |
          echo "::group::Installing npm packages"
          npm install
          echo "::endgroup::"

      - name: 🔧 Compile TypeScript
        run: |
          echo "::group::Compiling TypeScript"
          npx tsc --noImplicitAny false --strictNullChecks false
          echo "✅ TypeScript compilation completed"
          echo "::endgroup::"

      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: 📝 Create Gemfile if missing
        run: |
          if [ ! -f Gemfile ]; then
            echo "::group::Creating Gemfile"
            cat > Gemfile << 'EOF'
          source "https://rubygems.org"
          
          gem "jekyll", "~> 4.3.0"
          gem "webrick", "~> 1.8"
          
          group :jekyll_plugins do
            gem "jekyll-feed", "~> 0.12"
            gem "jekyll-sitemap"
            gem "jekyll-seo-tag"
          end
          EOF
            echo "✅ Gemfile created"
            echo "::endgroup::"
          fi

      - name: 💎 Install Ruby Dependencies
        run: |
          echo "::group::Installing Ruby gems"
          bundle install
          echo "::endgroup::"

      - name: ⚙️ Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: 📝 Create _config.yml if missing
        run: |
          if [ ! -f _config.yml ]; then
            echo "::group::Creating Jekyll config"
            cat > _config.yml << 'EOF'
          title: Links Website
          description: A modern links website template
          baseurl: ""
          url: ""
          
          markdown: kramdown
          highlighter: rouge
          
          plugins:
            - jekyll-feed
            - jekyll-sitemap
            - jekyll-seo-tag
          
          exclude:
            - node_modules/
            - contents/js/
            - package*.json
            - tsconfig.json
            - README.md
          EOF
            echo "✅ Jekyll config created"
            echo "::endgroup::"
          fi

      - name: 🏗️ Build Jekyll Site
        run: |
          echo "::group::Building Jekyll site"
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
          echo "✅ Jekyll build completed"
          echo "::endgroup::"
        env:
          JEKYLL_ENV: production

      - name: 📁 Upload Site Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    name: 🌐 Deploy to Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: ✅ Deployment Success
        run: |
          echo "🎉 Site successfully deployed!"
          echo "📍 URL: ${{ steps.deployment.outputs.page_url }}"
